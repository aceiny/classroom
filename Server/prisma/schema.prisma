generator client {
  provider  = "prisma-client-py"
  interface = "asyncio"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String       @id @default(cuid())
  name                  String
  email                 String       @unique
  password              String
  gender                Gender
  role                  UserRole
  image                String?
  classroomsAsProfessor Classroom[]  @relation("ProfessorClassrooms")
  enrollments           Enrollment[]
  submissions           Submission[]
  Coursworks           Courswork[] @relation("CoursworkProfessor") 
}

enum Gender {
  Male
  Female
}

enum UserRole {
  Student
  Professor
}

model Classroom {
  id          String       @id @default(cuid())
  name        String
  professorId String
  professor   User         @relation("ProfessorClassrooms", fields: [professorId], references: [id])
  enrollments Enrollment[]
  Courswork  Courswork[]
  inviteLinks InviteLink[]
}
model InviteLink { 
  id String @id @default(cuid())
  classroomId String
  classroom Classroom @relation(fields: [classroomId], references: [id])
}


model Enrollment {
  id          String    @id @default(cuid())
  membreId   String
  membre     User      @relation(fields: [membreId], references: [id])
  classroomId String
  classroom   Classroom @relation(fields: [classroomId], references: [id])
}

model Courswork {
  id          String       @id @default(cuid())
  classroomId String
  professorId String
  title       String
  type        CoursworkType
  description String
  due_date    DateTime
  classroom   Classroom    @relation(fields: [classroomId], references: [id])
  professor   User         @relation("CoursworkProfessor", fields: [professorId], references: [id]) // Updated line
  submissions Submission[]
}

enum CoursworkType{
  Assignment
  Quiz
  Project
  Exam
  Other
}
model Submission {
  id           String     @id @default(cuid())
  CoursworkId String
  studentId    String
  content      String
  files       File[]
  Courswork   Courswork @relation(fields: [CoursworkId], references: [id])
  student      User       @relation(fields: [studentId], references: [id])
}
model FileÂ {
  id String @id @default(cuid())
  name String
  path String
  type String 
  size String 
  submissionId String
  submission Submission @relation(fields: [submissionId], references: [id])
}